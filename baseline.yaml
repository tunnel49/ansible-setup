---

- name: "ensure node meets basic requirements"
  hosts: all
  become: false

  tasks:
  - name: get ansible user data 
    check_mode: false
    changed_when: false
    become: false
    ansible.builtin.command: id -Gn
    register: user_meta
  - name: check that the user can sudo
    become: false
    vars:
      sudo_groups:
      - wheel
      - sudoers
    ansible.builtin.set_fact: 
      ansible_sudo: >-
        {{ user_meta.stdout | split( ' ' ) | intersect( sudo_groups ) }}
  - name: fail if ansible can't sudo
    become: false
    fail:
      msg: |
        Ansible probably can't sudo
        if you are sure you want to try anyway, set force_try_sudo to true
    when: not (ansible_sudo or (force_try_sudo | bool))

  - name: update pacman packages
    become: true
    community.general.pacman:
      update_cache: true
      upgrade: true

  - name: retrieve machine key
    become: true
    vars:
      keyid: 'root@{{ inventory_hostname }}'
      gpghome: '/root/.gnupg'
      gpg: 'gpg --homedir {{ gpghome }}'
    ansible.builtin.shell:
      cmd: | 
        set -o pipefail &&
        {{ gpg }} --with-colons -K {{ keyid }} | 
        awk -F: '$1=="sec"&&$2~/^[u]$/{sec=1;next}sec=1&&$1=="fpr"{sec=0;print $10;exit}'
    register: _result
    changed_when: false
    check_mode: false
    failed_when: ( _result.rc != 0 ) or ( _result.stdout_lines | length != 1 )
  - name: register key
    set_fact:
      cacheable: true
      gpg_machine_key: '{{ _result.stdout }}'


        # TODO: Check for trust
        # awk -F: '$1=="pub"&&$2~/^[uf]$/{print $0;exit}'
  - name: check if key is already trusted
    delegate_to: 127.0.0.1
    ansible.builtin.shell:
      cmd: |
        set -o pipefail &&
        gpg --with-colons -k {{ gpg_machine_key }} |
        awk -F: '$1=="pub"{print $0;exit}'
    register: _result
    failed_when: not _result.rc in [0,2]
    changed_when: false
    check_mode: false
  - name: retrieve import and trust
    when: not (_result.stdout_lines | length)
    block:
    - name: retrieve
      become: true
      changed_when: false
      ansible.builtin.shell:
        cmd: |
          gpg --homedir /root/.gnupg -a --export {{ gpg_machine_key }}
      register: _pub_result
          # TODO: Add trust somehow...
    - name: import
      delegate_to: 127.0.0.1
      ansible.builtin.shell:
        cmd: |
          gpg --import &&
          gpg --import-ownertrust <<< "{{ gpg_machine_key }}:5:"
        stdin: '{{ _pub_result.stdout }}'
      register: _import_result
